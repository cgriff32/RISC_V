--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:04:24:18:08:47:SJ cbx_lpm_add_sub 2013:04:24:18:08:47:SJ cbx_lpm_compare 2013:04:24:18:08:47:SJ cbx_lpm_decode 2013:04:24:18:08:47:SJ cbx_mgl 2013:04:24:18:11:10:SJ cbx_stratix 2013:04:24:18:08:47:SJ cbx_stratixii 2013:04:24:18:08:47:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_4aa
( 
	data[3..0]	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode1331w[3..0]	: WIRE;
	w_anode1348w[3..0]	: WIRE;
	w_anode1358w[3..0]	: WIRE;
	w_anode1368w[3..0]	: WIRE;
	w_anode1378w[3..0]	: WIRE;
	w_anode1388w[3..0]	: WIRE;
	w_anode1398w[3..0]	: WIRE;
	w_anode1408w[3..0]	: WIRE;
	w_anode1418w[3..0]	: WIRE;
	w_anode1429w[3..0]	: WIRE;
	w_anode1439w[3..0]	: WIRE;
	w_anode1449w[3..0]	: WIRE;
	w_anode1459w[3..0]	: WIRE;
	w_anode1469w[3..0]	: WIRE;
	w_anode1479w[3..0]	: WIRE;
	w_anode1489w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[7..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode1408w[3..3], w_anode1398w[3..3], w_anode1388w[3..3], w_anode1378w[3..3], w_anode1368w[3..3], w_anode1358w[3..3], w_anode1348w[3..3], w_anode1331w[3..3]);
	eq_wire2w[] = ( w_anode1489w[3..3], w_anode1479w[3..3], w_anode1469w[3..3], w_anode1459w[3..3], w_anode1449w[3..3], w_anode1439w[3..3], w_anode1429w[3..3], w_anode1418w[3..3]);
	w_anode1331w[] = ( (w_anode1331w[2..2] & (! data_wire[2..2])), (w_anode1331w[1..1] & (! data_wire[1..1])), (w_anode1331w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode1348w[] = ( (w_anode1348w[2..2] & (! data_wire[2..2])), (w_anode1348w[1..1] & (! data_wire[1..1])), (w_anode1348w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode1358w[] = ( (w_anode1358w[2..2] & (! data_wire[2..2])), (w_anode1358w[1..1] & data_wire[1..1]), (w_anode1358w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode1368w[] = ( (w_anode1368w[2..2] & (! data_wire[2..2])), (w_anode1368w[1..1] & data_wire[1..1]), (w_anode1368w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode1378w[] = ( (w_anode1378w[2..2] & data_wire[2..2]), (w_anode1378w[1..1] & (! data_wire[1..1])), (w_anode1378w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode1388w[] = ( (w_anode1388w[2..2] & data_wire[2..2]), (w_anode1388w[1..1] & (! data_wire[1..1])), (w_anode1388w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode1398w[] = ( (w_anode1398w[2..2] & data_wire[2..2]), (w_anode1398w[1..1] & data_wire[1..1]), (w_anode1398w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode1408w[] = ( (w_anode1408w[2..2] & data_wire[2..2]), (w_anode1408w[1..1] & data_wire[1..1]), (w_anode1408w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode1418w[] = ( (w_anode1418w[2..2] & (! data_wire[2..2])), (w_anode1418w[1..1] & (! data_wire[1..1])), (w_anode1418w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode1429w[] = ( (w_anode1429w[2..2] & (! data_wire[2..2])), (w_anode1429w[1..1] & (! data_wire[1..1])), (w_anode1429w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode1439w[] = ( (w_anode1439w[2..2] & (! data_wire[2..2])), (w_anode1439w[1..1] & data_wire[1..1]), (w_anode1439w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode1449w[] = ( (w_anode1449w[2..2] & (! data_wire[2..2])), (w_anode1449w[1..1] & data_wire[1..1]), (w_anode1449w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode1459w[] = ( (w_anode1459w[2..2] & data_wire[2..2]), (w_anode1459w[1..1] & (! data_wire[1..1])), (w_anode1459w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode1469w[] = ( (w_anode1469w[2..2] & data_wire[2..2]), (w_anode1469w[1..1] & (! data_wire[1..1])), (w_anode1469w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode1479w[] = ( (w_anode1479w[2..2] & data_wire[2..2]), (w_anode1479w[1..1] & data_wire[1..1]), (w_anode1479w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode1489w[] = ( (w_anode1489w[2..2] & data_wire[2..2]), (w_anode1489w[1..1] & data_wire[1..1]), (w_anode1489w[0..0] & data_wire[0..0]), enable_wire2);
END;
--VALID FILE
